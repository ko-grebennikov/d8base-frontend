name: deploy back tests
on: [workflow_dispatch]
jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [13.x]

        steps:
            - uses: actions/checkout@v1

            - name: Node ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install
              run: npm install

            - name: copy env file
              run: |
                yes| cp ./src/environments/environment.ts.dist ./src/environments/environment.ts
#            - name: Lint
#              run: npm run lint

#            - name: Test
#              run: npm run test -- --no-watch

            - name: git pull
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.STAGEHOST }}
                username: mb
                passphrase: ${{ secrets.STAGEDEPLPASS }}
                key: ${{ secrets.STAGEDEPLKEY }}
                script: |
                    cd ${{ secrets.BACKDIR }}
                    git pull
                    
            - name: Install nmp dependencies
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.STAGEHOST }}
                username: mb
                passphrase: ${{ secrets.STAGEDEPLPASS }}
                key: ${{ secrets.STAGEDEPLKEY }}
                script: docker-compose -f /var/maxibooking/d8b-back-npm-install.yml up

            - name: Rebuild container of the d8b-back-django-cli service
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.STAGEHOST }}
                username: mb
                passphrase: ${{ secrets.STAGEDEPLPASS }}
                key: ${{ secrets.STAGEDEPLKEY }}
                script: docker-compose -f /var/maxibooking/d8b-back-django-cli.yml build --no-cache d8b-back-django-cli
  
            - name: Run migrations
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.STAGEHOST }}
                username: mb
                passphrase: ${{ secrets.STAGEDEPLPASS }}
                key: ${{ secrets.STAGEDEPLKEY }}
                script: docker-compose -f /var/maxibooking/d8b-back-django-cli.yml run --rm d8b-back-django-cli ./manage.py migrate --no-input

            - name: Static generate
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.STAGEHOST }}
                username: mb
                passphrase: ${{ secrets.STAGEDEPLPASS }}
                key: ${{ secrets.STAGEDEPLKEY }}
                script: docker-compose -f /var/maxibooking/d8b-back-django-cli.yml run --rm d8b-back-django-cli ./manage.py collectstatic --no-input

            - name: Messages generate
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.STAGEHOST }}
                username: mb
                passphrase: ${{ secrets.STAGEDEPLPASS }}
                key: ${{ secrets.STAGEDEPLKEY }}
                script: docker-compose -f /var/maxibooking/d8b-back-django-cli.yml run --rm d8b-back-django-cli ./manage.py compilemessages -f

            - name: Stop d8b-back-web container
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.STAGEHOST }}
                username: mb
                passphrase: ${{ secrets.STAGEDEPLPASS }}
                key: ${{ secrets.STAGEDEPLKEY }}
                script: docker container stop d8b-back-web
  
            - name: Remove d8b-back-web container
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.STAGEHOST }}
                username: mb
                passphrase: ${{ secrets.STAGEDEPLPASS }}
                key: ${{ secrets.STAGEDEPLKEY }}
                script: docker container rm d8b-back-web
  
            - name: Build d8b-back-web container
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.STAGEHOST }}
                username: mb
                passphrase: ${{ secrets.STAGEDEPLPASS }}
                key: ${{ secrets.STAGEDEPLKEY }}
                script: docker-compose -f /var/maxibooking/d8b-back-main-composer.yml build --no-cache d8b-back-web

            - name: Start d8b-back-web container
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.STAGEHOST }}
                username: mb
                passphrase: ${{ secrets.STAGEDEPLPASS }}
                key: ${{ secrets.STAGEDEPLKEY }}
                script: docker-compose -f /var/maxibooking/d8b-back-main-composer.yml up -d d8b-back-web

            - name: Send email if tests or deploy are failure
              uses: dawidd6/action-send-mail@v2
              if: ${{ failure() }}
              with:
                server_address: smtp.yandex.ru
                server_port: 465
                username: ${{secrets.MAIL_USERNAME}}
                password: ${{secrets.MAIL_PASSWORD}}
                subject: Failure - ${{github.repository}} - tests or deploy on push 
                body: Tests or deploy on push are failure - ${{github.repository}}
                to: ${{secrets.FAIL_MAIL_RECEPIENTS}}
                from: Github actions
                content_type: text/html
                    
            - name: Send email if tests and deploy are successful
              uses: dawidd6/action-send-mail@v2
              if: ${{ success() }}
              with:
                server_address: smtp.yandex.ru
                server_port: 465
                username: ${{secrets.MAIL_USERNAME}}
                password: ${{secrets.MAIL_PASSWORD}}
                subject: Success - ${{github.repository}} - tests and deploy on push
                body: Tests and deploy on push are successful - ${{github.repository}}
                to: ${{secrets.SUCCESS_MAIL_RECEPIENTS}}
                from: Github actions
                content_type: text/html